ADD_DEFINITIONS(
  -DGCC_XML_GCC_VERSION=${GCC_XML_GCC_VERSION}
  -DGCCXML_VERSION_FULL=\"${GCCXML_VERSION_FULL}\"
  )

IF(UNIX OR CYGWIN)
  INCLUDE_DIRECTORIES(BEFORE
    ${CMAKE_CURRENT_SOURCE_DIR}
    /usr/lib/gcc/${target}/${GCC_BASEVER}/plugin/include
    /usr/lib/gcc/${target}/${GCC_BASEVER}/plugin/include/cp
    )
ENDIF(UNIX OR CYGWIN)

IF(GCCXML_INSTALL_COMPONENT_NAME_PLUGIN)
  SET(GCCXML_INSTALL_COMPONENT_PLUGIN
    COMPONENT ${GCCXML_INSTALL_COMPONENT_NAME_PLUGIN})
ENDIF(GCCXML_INSTALL_COMPONENT_NAME_PLUGIN)

SET(GCCXML_PLUGIN_OUTPUT_PATH ${PLUGIN_OUTPUT_PATH})

# Do not inherit library building rules from the parent project.
SET(BUILD_SHARED_LIBS 1)
SET(LIBRARY_OUTPUT_PATH "${GCC_BINARY_DIR}/gcc")

IF(APPLE)
  IF(CMAKE_COMPILER_IS_GNUCC)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -no-cpp-precomp")
  ENDIF(CMAKE_COMPILER_IS_GNUCC)
ENDIF(APPLE)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${CMAKE_ANSI_CFLAGS}")
SET(LC_ALL "C")

IF(CMAKE_C_COMPILER MATCHES "cl")
  STRING(REGEX REPLACE "/W([0-4])?" "" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
  SET(CMAKE_CXX_WARNING_LEVEL 0)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W0")
ELSE(CMAKE_C_COMPILER MATCHES "cl")
  IF(CMAKE_C_COMPILER MATCHES "bcc32")
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -w-")
  ELSE(CMAKE_C_COMPILER MATCHES "bcc32")
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -w")
  ENDIF(CMAKE_C_COMPILER MATCHES "bcc32")
ENDIF(CMAKE_C_COMPILER MATCHES "cl")

ADD_DEFINITIONS(-DALMOST_STDC)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${PLUGIN_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${PLUGIN_FLAGS}")

ADD_LIBRARY(gccxml_plugin SHARED xml.c)
SET_TARGET_PROPERTIES(gccxml_plugin PROPERTIES
  LINK_FLAGS "${FPIC_FLAG} ${CMAKE_SHARED_FLAGS}")
